---
apiVersion: v1
kind: Service
metadata:
  name: ws
  namespace: $K8S_NAMESPACE
  labels:
    app.kubernetes.io/name: ws
spec:
  type: ClusterIP
  ports:
    - port: 80
      targetPort: 80
      protocol: TCP
      name: http
  selector:
    app.kubernetes.io/name: ws
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: ws
  namespace: $K8S_NAMESPACE
  labels:
    app.kubernetes.io/name: ws
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: ws
  template:
    metadata:
      labels:
        app.kubernetes.io/name: ws
        app.kubernetes.io/version: $K8S_APP_VERSION
        app.kubernetes.io/component: backend
        app.kubernetes.io/part-of: chat
    spec:
      initContainers:
        - name: "migrate-database"
          image: "$K8S_IMAGE"
          command:
          - /bin/bash
          - "-c"
          - "php artisan migrate"
          env:
            - name: APP_ENV
              value: "$K8S_APP_ENV"
            - name: LOG_CHANNEL
              value: "$K8S_LOG_CHANNEL"
            - name: LOG_LEVEL
              value: "$K8S_LOG_LEVEL"
            - name: DB_HOST
              value: "$K8S_DB_HOST"
            - name: DB_PORT
              value: "$K8S_DB_PORT"
            - name: DB_DATABASE
              value: "$K8S_DB_DATABASE"
            - name: DB_USERNAME
              value: "$K8S_DB_USERNAME"
            - name: DB_PASSWORD
              value: "$K8S_DB_PASSWORD"
      containers:
        - name: ws
          image: "$K8S_IMAGE"
          imagePullPolicy: Always
          env:
            - name: APP_ENV
              value: "$K8S_APP_ENV"
            - name: JWT_KEY
              value: "$K8S_JWT_KEY"
            - name: JABBER_URL
              value: "K8S_JABBER_URL"
            - name: UFILE_SUFFIX
              value: ".cn-bj.ufileos.com"
            - name: UFILE_ACCESS_KEY
              value: "$K8S_UFILE_ACCESS_KEY"
            - name: UFILE_SECRET_KEY
              value: "$K8S_UFILE_SECRET_KEY"
            - name: UFILE_BUCKET
              value: "$K8S_UFILE_BUCKET"
            - name: LOG_CHANNEL
              value: "$K8S_LOG_CHANNEL"
            - name: LOG_LEVEL
              value: "$K8S_LOG_LEVEL"
            - name: RMQ_HOST
              value: "$K8S_RMQ_HOST"
            - name: RMQ_PORT
              value: "$K8S_RMQ_PORT"
            - name: RMQ_USER
              value: "$K8S_RMQ_USER"
            - name: RMQ_PASS
              value: "$K8S_RMQ_PASS"
            - name: DB_HOST
              value: "$K8S_DB_HOST"
            - name: DB_PORT
              value: "$K8S_DB_PORT"
            - name: DB_DATABASE
              value: "$K8S_DB_DATABASE"
            - name: DB_USERNAME
              value: "$K8S_DB_USERNAME"
            - name: DB_PASSWORD
              value: "$K8S_DB_PASSWORD"
            - name: REDIS_HOST
              value: "$K8S_REDIS_HOST"
            - name: REDIS_PORT
              value: "$K8S_REDIS_PORT"
          ports:
            - name: http
              containerPort: 9000
              protocol: TCP
          livenessProbe:
            tcpSocket:
              port: 9000
            periodSeconds: 20
          readinessProbe:
            tcpSocket:
              port: 9000
            initialDelaySeconds: 10
            periodSeconds: 10
          resources:
            limits:
              cpu: "$K8S_RES_LIM_CPU"
              memory: "$K8S_RES_LIM_RAM"
            requests:
              cpu: "$K8S_RES_REQ_CPU"
              memory: "$K8S_RES_REQ_RAM"
        - name: nginx
          image: "nginx:1.16"
          imagePullPolicy: Always
          ports:
            - name: http
              containerPort: 80
              protocol: TCP
          livenessProbe:
            tcpSocket:
              port: 80
            periodSeconds: 20
          readinessProbe:
            tcpSocket:
              port: 80
            initialDelaySeconds: 10
            periodSeconds: 10
          resources:
            limits:
              cpu: "2"
              memory: "2Gi"
            requests:
              cpu: "100m"
              memory: "1Gi"
          volumeMounts:
          - name: ws-nginx-default-config
            mountPath: /etc/nginx/conf.d/default.conf
            subPath: default.conf
          - name: ws-nginx-static-htaccess
            mountPath: /var/www/html/.htaccess
            subPath: .htaccess
          - name: ws-nginx-static-index
            mountPath: /var/www/html/index.php
            subPath: index.php
      imagePullSecrets:
        - name: ucloud
      volumes:
        - name: ws-nginx-default-config
          configMap:
            name: ws-nginx
            items:
            - key: default.conf
              path: default.conf
        - name: ws-nginx-static-htaccess
          configMap:
            name: ws-nginx-static
            items:
            - key: .htaccess
              path: .htaccess
        - name: ws-nginx-static-index
          configMap:
            name: ws-nginx-static
            items:
            - key: index.php
              path: index.php
---
